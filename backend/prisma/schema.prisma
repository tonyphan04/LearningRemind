generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  passwordHash  String
  collections   Collection[]
  uploadedFiles UploadedFile[]
}

model UploadedFile {
  id           Int        @id @default(autoincrement())
  filename     String
  mimetype     String
  size         Int
  data         Bytes
  uploadedAt   DateTime   @default(now())
  userId       Int
  collectionId Int
  collection   Collection @relation(fields: [collectionId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}

model Collection {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  userId        Int
  user          User           @relation(fields: [userId], references: [id])
  reviewTask    ReviewTask?
  uploadedFiles UploadedFile[]
  words         Word[]
}

model Word {
  id           Int        @id @default(autoincrement())
  collectionId Int
  word         String
  description  String
  example      String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  collection   Collection @relation(fields: [collectionId], references: [id])
}

model ReviewTask {
  id            Int        @id @default(autoincrement())
  collectionId  Int        @unique
  intervalIndex Int
  nextReview    DateTime
  lastReviewed  DateTime
  reviewCount   Int        @default(0)
  collection    Collection @relation(fields: [collectionId], references: [id])
}
